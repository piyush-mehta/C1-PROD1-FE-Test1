Running "test" task

Running "nightwatch:smokeTestLocal" (nightwatch) task
Using Selenium from node_modules/selenium-server-standalone-jar/jar/selenium-server-standalone-2.53.1.jar
[1;35mStarting selenium server... [0m[1;35mstarted - PID: [0m 6032
[mochawesome] Generating report files...



  Builder Smoke Test Suite
Section {
  parent: 
   { commandLoader: [Function],
     api: 
      { capabilities: {},
        globals: [Object],
        sessionId: null,
        options: [Object],
        launchUrl: null,
        launch_url: null,
        screenshotsPath: 'screenshots',
        Keys: [Object],
        session: [Function: commandFn],
        sessions: [Function: commandFn],
        timeouts: [Function: commandFn],
        timeoutsAsyncScript: [Function: commandFn],
        timeoutsImplicitWait: [Function: commandFn],
        element: [Function: commandFn],
        elementIdElement: [Function: commandFn],
        elements: [Function: commandFn],
        elementIdElements: [Function: commandFn],
        elementActive: [Function: commandFn],
        elementIdAttribute: [Function: commandFn],
        elementIdClick: [Function: commandFn],
        elementIdCssProperty: [Function: commandFn],
        elementIdDisplayed: [Function: commandFn],
        elementIdLocationInView: [Function: commandFn],
        elementIdLocation: [Function: commandFn],
        elementIdName: [Function: commandFn],
        elementIdClear: [Function: commandFn],
        elementIdSelected: [Function: commandFn],
        elementIdEnabled: [Function: commandFn],
        elementIdEquals: [Function: commandFn],
        elementIdSize: [Function: commandFn],
        elementIdText: [Function: commandFn],
        elementIdValue: [Function: commandFn],
        submit: [Function: commandFn],
        source: [Function: commandFn],
        contexts: [Function: commandFn],
        currentContext: [Function: commandFn],
        setContext: [Function: commandFn],
        getOrientation: [Function: commandFn],
        setOrientation: [Function: commandFn],
        moveTo: [Function: commandFn],
        doubleClick: [Function: commandFn],
        mouseButtonClick: [Function: commandFn],
        mouseButtonDown: [Function: commandFn],
        mouseButtonUp: [Function: commandFn],
        execute: [Function: commandFn],
        executeAsync: [Function: commandFn],
        execute_async: [Function: commandFn],
        frame: [Function: commandFn],
        frameParent: [Function: commandFn],
        window: [Function: commandFn],
        windowHandle: [Function: commandFn],
        windowMaximize: [Function: commandFn],
        window_handle: [Function: commandFn],
        windowHandles: [Function: commandFn],
        window_handles: [Function: commandFn],
        windowSize: [Function: commandFn],
        windowPosition: [Function: commandFn],
        refresh: [Function: commandFn],
        back: [Function: commandFn],
        forward: [Function: commandFn],
        screenshot: [Function: commandFn],
        url: [Function: commandFn],
        status: [Function: commandFn],
        title: [Function: commandFn],
        keys: [Function: commandFn],
        cookie: [Function: commandFn],
        acceptAlert: [Function: commandFn],
        accept_alert: [Function: commandFn],
        dismissAlert: [Function: commandFn],
        setAlertText: [Function: commandFn],
        getAlertText: [Function: commandFn],
        dismiss_alert: [Function: commandFn],
        sessionLog: [Function: commandFn],
        sessionLogTypes: [Function: commandFn],
        click: [Function: commandFn],
        clearValue: [Function: commandFn],
        getAttribute: [Function: commandFn],
        getCssProperty: [Function: commandFn],
        getElementSize: [Function: commandFn],
        getLocation: [Function: commandFn],
        getLocationInView: [Function: commandFn],
        getTagName: [Function: commandFn],
        getText: [Function: commandFn],
        getValue: [Function: commandFn],
        isVisible: [Function: commandFn],
        moveToElement: [Function: commandFn],
        setValue: [Function: commandFn],
        submitForm: [Function: commandFn],
        sendKeys: [Function: commandFn],
        switchWindow: [Function: commandFn],
        resizeWindow: [Function: commandFn],
        setWindowPosition: [Function: commandFn],
        maximizeWindow: [Function: commandFn],
        saveScreenshot: [Function: commandFn],
        getTitle: [Function: commandFn],
        closeWindow: [Function: commandFn],
        init: [Function: commandFn],
        urlHash: [Function: commandFn],
        getCookies: [Function: commandFn],
        getCookie: [Function: commandFn],
        setCookie: [Function: commandFn],
        deleteCookie: [Function: commandFn],
        deleteCookies: [Function: commandFn],
        injectScript: [Function: commandFn],
        getLogTypes: [Function: commandFn],
        getLog: [Function: commandFn],
        isLogAvailable: [Function: commandFn],
        waitForElementNotPresent: [Function: commandFn],
        waitForElementNotVisible: [Function: commandFn],
        waitForElementPresent: [Function: commandFn],
        waitForElementVisible: [Function: commandFn],
        end: [Function: commandFn],
        pause: [Function: commandFn],
        perform: [Function: commandFn],
        useCss: [Function: commandFn],
        useRecursion: [Function: commandFn],
        useXpath: [Function: commandFn],
        page: [Object],
        expect: [Object],
        assert: [Object],
        verify: [Object],
        currentTest: [Object] },
     client: 
      Nightwatch {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: 0,
        locateStrategy: 'css selector',
        api: [Object],
        sessionId: null,
        context: null,
        terminated: false,
        options: [Object],
        desiredCapabilities: [Object],
        errors: [],
        results: [Object],
        queue: [Object] },
     name: 'products.page',
     url: null,
     props: {},
     elements: {},
     section: { productTemplates: [Object], productFilters: [Circular] },
     click: [Function],
     clearValue: [Function],
     getAttribute: [Function],
     getCssProperty: [Function],
     getElementSize: [Function],
     getLocation: [Function],
     getLocationInView: [Function],
     getTagName: [Function],
     getText: [Function],
     getValue: [Function],
     isVisible: [Function],
     moveToElement: [Function],
     setValue: [Function],
     submitForm: [Function],
     sendKeys: [Function],
     waitForElementNotPresent: [Function],
     waitForElementNotVisible: [Function],
     waitForElementPresent: [Function],
     waitForElementVisible: [Function],
     expect: { element: [Function], section: [Function] },
     assert: 
      { AssertionError: [Function],
        fail: [Function],
        ok: [Function],
        equal: [Function],
        notEqual: [Function],
        deepEqual: [Function],
        deepStrictEqual: [Function],
        notDeepEqual: [Function],
        notDeepStrictEqual: [Function],
        strictEqual: [Function],
        notStrictEqual: [Function],
        throws: [Function],
        doesNotThrow: [Function],
        ifError: [Function],
        attributeContains: [Function],
        attributeEquals: [Function],
        containsText: [Function],
        cssClassNotPresent: [Function],
        cssClassPresent: [Function],
        cssProperty: [Function],
        elementNotPresent: [Function],
        elementPresent: [Function],
        hidden: [Function],
        title: [Function],
        urlContains: [Function],
        urlEquals: [Function],
        value: [Function],
        valueContains: [Function],
        visible: [Function] },
     verify: 
      { AssertionError: [Function],
        fail: [Function],
        ok: [Function],
        equal: [Function],
        notEqual: [Function],
        deepEqual: [Function],
        deepStrictEqual: [Function],
        notDeepEqual: [Function],
        notDeepStrictEqual: [Function],
        strictEqual: [Function],
        notStrictEqual: [Function],
        throws: [Function],
        doesNotThrow: [Function],
        ifError: [Function],
        attributeContains: [Function],
        attributeEquals: [Function],
        containsText: [Function],
        cssClassNotPresent: [Function],
        cssClassPresent: [Function],
        cssProperty: [Function],
        elementNotPresent: [Function],
        elementPresent: [Function],
        hidden: [Function],
        title: [Function],
        urlContains: [Function],
        urlEquals: [Function],
        value: [Function],
        valueContains: [Function],
        visible: [Function] } },
  client: 
   Nightwatch {
     domain: null,
     _events: { 'selenium:session_create': [Object] },
     _eventsCount: 1,
     _maxListeners: 0,
     locateStrategy: 'css selector',
     api: 
      { capabilities: {},
        globals: [Object],
        sessionId: null,
        options: [Object],
        launchUrl: null,
        launch_url: null,
        screenshotsPath: 'screenshots',
        Keys: [Object],
        session: [Function: commandFn],
        sessions: [Function: commandFn],
        timeouts: [Function: commandFn],
        timeoutsAsyncScript: [Function: commandFn],
        timeoutsImplicitWait: [Function: commandFn],
        element: [Function: commandFn],
        elementIdElement: [Function: commandFn],
        elements: [Function: commandFn],
        elementIdElements: [Function: commandFn],
        elementActive: [Function: commandFn],
        elementIdAttribute: [Function: commandFn],
        elementIdClick: [Function: commandFn],
        elementIdCssProperty: [Function: commandFn],
        elementIdDisplayed: [Function: commandFn],
        elementIdLocationInView: [Function: commandFn],
        elementIdLocation: [Function: commandFn],
        elementIdName: [Function: commandFn],
        elementIdClear: [Function: commandFn],
        elementIdSelected: [Function: commandFn],
        elementIdEnabled: [Function: commandFn],
        elementIdEquals: [Function: commandFn],
        elementIdSize: [Function: commandFn],
        elementIdText: [Function: commandFn],
        elementIdValue: [Function: commandFn],
        submit: [Function: commandFn],
        source: [Function: commandFn],
        contexts: [Function: commandFn],
        currentContext: [Function: commandFn],
        setContext: [Function: commandFn],
        getOrientation: [Function: commandFn],
        setOrientation: [Function: commandFn],
        moveTo: [Function: commandFn],
        doubleClick: [Function: commandFn],
        mouseButtonClick: [Function: commandFn],
        mouseButtonDown: [Function: commandFn],
        mouseButtonUp: [Function: commandFn],
        execute: [Function: commandFn],
        executeAsync: [Function: commandFn],
        execute_async: [Function: commandFn],
        frame: [Function: commandFn],
        frameParent: [Function: commandFn],
        window: [Function: commandFn],
        windowHandle: [Function: commandFn],
        windowMaximize: [Function: commandFn],
        window_handle: [Function: commandFn],
        windowHandles: [Function: commandFn],
        window_handles: [Function: commandFn],
        windowSize: [Function: commandFn],
        windowPosition: [Function: commandFn],
        refresh: [Function: commandFn],
        back: [Function: commandFn],
        forward: [Function: commandFn],
        screenshot: [Function: commandFn],
        url: [Function: commandFn],
        status: [Function: commandFn],
        title: [Function: commandFn],
        keys: [Function: commandFn],
        cookie: [Function: commandFn],
        acceptAlert: [Function: commandFn],
        accept_alert: [Function: commandFn],
        dismissAlert: [Function: commandFn],
        setAlertText: [Function: commandFn],
        getAlertText: [Function: commandFn],
        dismiss_alert: [Function: commandFn],
        sessionLog: [Function: commandFn],
        sessionLogTypes: [Function: commandFn],
        click: [Function: commandFn],
        clearValue: [Function: commandFn],
        getAttribute: [Function: commandFn],
        getCssProperty: [Function: commandFn],
        getElementSize: [Function: commandFn],
        getLocation: [Function: commandFn],
        getLocationInView: [Function: commandFn],
        getTagName: [Function: commandFn],
        getText: [Function: commandFn],
        getValue: [Function: commandFn],
        isVisible: [Function: commandFn],
        moveToElement: [Function: commandFn],
        setValue: [Function: commandFn],
        submitForm: [Function: commandFn],
        sendKeys: [Function: commandFn],
        switchWindow: [Function: commandFn],
        resizeWindow: [Function: commandFn],
        setWindowPosition: [Function: commandFn],
        maximizeWindow: [Function: commandFn],
        saveScreenshot: [Function: commandFn],
        getTitle: [Function: commandFn],
        closeWindow: [Function: commandFn],
        init: [Function: commandFn],
        urlHash: [Function: commandFn],
        getCookies: [Function: commandFn],
        getCookie: [Function: commandFn],
        setCookie: [Function: commandFn],
        deleteCookie: [Function: commandFn],
        deleteCookies: [Function: commandFn],
        injectScript: [Function: commandFn],
        getLogTypes: [Function: commandFn],
        getLog: [Function: commandFn],
        isLogAvailable: [Function: commandFn],
        waitForElementNotPresent: [Function: commandFn],
        waitForElementNotVisible: [Function: commandFn],
        waitForElementPresent: [Function: commandFn],
        waitForElementVisible: [Function: commandFn],
        end: [Function: commandFn],
        pause: [Function: commandFn],
        perform: [Function: commandFn],
        useCss: [Function: commandFn],
        useRecursion: [Function: commandFn],
        useXpath: [Function: commandFn],
        page: [Object],
        expect: [Object],
        assert: [Object],
        verify: [Object],
        currentTest: [Object] },
     sessionId: null,
     context: null,
     terminated: false,
     options: 
      { selenium_host: '127.0.0.1',
        selenium_port: 5554,
        end_session_on_fail: false,
        src_folders: [Object],
        screenshots: [Object],
        desiredCapabilities: [Object],
        cli_args: [Object],
        custom_commands_path: './test/e2e/custom_commands',
        custom_assertions_path: '',
        page_objects_path: './test/e2e/pages/',
        silent: true,
        output: false,
        test_runner: [Object],
        globals: [Object],
        modulesNo: 1,
        start_session: true },
     desiredCapabilities: 
      { browserName: 'chrome',
        javascriptEnabled: true,
        acceptSslCerts: true,
        platform: 'ANY',
        chromeOptions: [Object] },
     errors: [],
     results: { passed: 0, failed: 0, errors: 0, skipped: 0, tests: [] },
     queue: 
      { reset: [Function],
        empty: [Function],
        add: [Function],
        run: [Function: queueRunner],
        done: [Function],
        instance: [Function: instance],
        list: [Function: list] } },
  name: 'productFilters',
  selector: '#content [class~=row][class~=ng-scope]',
  locateStrategy: 'css selector',
  api: 
   { capabilities: {},
     globals: { test: [Object], test_settings: [Object] },
     sessionId: null,
     options: 
      { screenshots: true,
        screenshotsPath: 'screenshots',
        skip_testcases_on_fail: true,
        log_screenshot_data: true,
        desiredCapabilities: [Object] },
     launchUrl: null,
     launch_url: null,
     screenshotsPath: 'screenshots',
     Keys: 
      { NULL: '',
        CANCEL: '',
        HELP: '',
        BACK_SPACE: '',
        TAB: '',
        CLEAR: '',
        RETURN: '',
        ENTER: '',
        SHIFT: '',
        CONTROL: '',
        ALT: '',
        PAUSE: '',
        ESCAPE: '',
        SPACE: '',
        PAGEUP: '',
        PAGEDOWN: '',
        END: '',
        HOME: '',
        LEFT_ARROW: '',
        UP_ARROW: '',
        RIGHT_ARROW: '',
        DOWN_ARROW: '',
        ARROW_LEFT: '',
        ARROW_UP: '',
        ARROW_RIGHT: '',
        ARROW_DOWN: '',
        INSERT: '',
        DELETE: '',
        SEMICOLON: '',
        EQUALS: '',
        NUMPAD0: '',
        NUMPAD1: '',
        NUMPAD2: '',
        NUMPAD3: '',
        NUMPAD4: '',
        NUMPAD5: '',
        NUMPAD6: '',
        NUMPAD7: '',
        NUMPAD8: '',
        NUMPAD9: '',
        MULTIPLY: '',
        ADD: '',
        SEPARATOR: '',
        SUBTRACT: '',
        DECIMAL: '',
        DIVIDE: '',
        F1: '',
        F2: '',
        F3: '',
        F4: '',
        F5: '',
        F6: '',
        F7: '',
        F8: '',
        F9: '',
        F10: '',
        F11: '',
        F12: '',
        COMMAND: '',
        META: '' },
     session: [Function: commandFn],
     sessions: [Function: commandFn],
     timeouts: [Function: commandFn],
     timeoutsAsyncScript: [Function: commandFn],
     timeoutsImplicitWait: [Function: commandFn],
     element: [Function: commandFn],
     elementIdElement: [Function: commandFn],
     elements: [Function: commandFn],
     elementIdElements: [Function: commandFn],
     elementActive: [Function: commandFn],
     elementIdAttribute: [Function: commandFn],
     elementIdClick: [Function: commandFn],
     elementIdCssProperty: [Function: commandFn],
     elementIdDisplayed: [Function: commandFn],
     elementIdLocationInView: [Function: commandFn],
     elementIdLocation: [Function: commandFn],
     elementIdName: [Function: commandFn],
     elementIdClear: [Function: commandFn],
     elementIdSelected: [Function: commandFn],
     elementIdEnabled: [Function: commandFn],
     elementIdEquals: [Function: commandFn],
     elementIdSize: [Function: commandFn],
     elementIdText: [Function: commandFn],
     elementIdValue: [Function: commandFn],
     submit: [Function: commandFn],
     source: [Function: commandFn],
     contexts: [Function: commandFn],
     currentContext: [Function: commandFn],
     setContext: [Function: commandFn],
     getOrientation: [Function: commandFn],
     setOrientation: [Function: commandFn],
     moveTo: [Function: commandFn],
     doubleClick: [Function: commandFn],
     mouseButtonClick: [Function: commandFn],
     mouseButtonDown: [Function: commandFn],
     mouseButtonUp: [Function: commandFn],
     execute: [Function: commandFn],
     executeAsync: [Function: commandFn],
     execute_async: [Function: commandFn],
     frame: [Function: commandFn],
     frameParent: [Function: commandFn],
     window: [Function: commandFn],
     windowHandle: [Function: commandFn],
     windowMaximize: [Function: commandFn],
     window_handle: [Function: commandFn],
     windowHandles: [Function: commandFn],
     window_handles: [Function: commandFn],
     windowSize: [Function: commandFn],
     windowPosition: [Function: commandFn],
     refresh: [Function: commandFn],
     back: [Function: commandFn],
     forward: [Function: commandFn],
     screenshot: [Function: commandFn],
     url: [Function: commandFn],
     status: [Function: commandFn],
     title: [Function: commandFn],
     keys: [Function: commandFn],
     cookie: [Function: commandFn],
     acceptAlert: [Function: commandFn],
     accept_alert: [Function: commandFn],
     dismissAlert: [Function: commandFn],
     setAlertText: [Function: commandFn],
     getAlertText: [Function: commandFn],
     dismiss_alert: [Function: commandFn],
     sessionLog: [Function: commandFn],
     sessionLogTypes: [Function: commandFn],
     click: [Function: commandFn],
     clearValue: [Function: commandFn],
     getAttribute: [Function: commandFn],
     getCssProperty: [Function: commandFn],
     getElementSize: [Function: commandFn],
     getLocation: [Function: commandFn],
     getLocationInView: [Function: commandFn],
     getTagName: [Function: commandFn],
     getText: [Function: commandFn],
     getValue: [Function: commandFn],
     isVisible: [Function: commandFn],
     moveToElement: [Function: commandFn],
     setValue: [Function: commandFn],
     submitForm: [Function: commandFn],
     sendKeys: [Function: commandFn],
     switchWindow: [Function: commandFn],
     resizeWindow: [Function: commandFn],
     setWindowPosition: [Function: commandFn],
     maximizeWindow: [Function: commandFn],
     saveScreenshot: [Function: commandFn],
     getTitle: [Function: commandFn],
     closeWindow: [Function: commandFn],
     init: [Function: commandFn],
     urlHash: [Function: commandFn],
     getCookies: [Function: commandFn],
     getCookie: [Function: commandFn],
     setCookie: [Function: commandFn],
     deleteCookie: [Function: commandFn],
     deleteCookies: [Function: commandFn],
     injectScript: [Function: commandFn],
     getLogTypes: [Function: commandFn],
     getLog: [Function: commandFn],
     isLogAvailable: [Function: commandFn],
     waitForElementNotPresent: [Function: commandFn],
     waitForElementNotVisible: [Function: commandFn],
     waitForElementPresent: [Function: commandFn],
     waitForElementVisible: [Function: commandFn],
     end: [Function: commandFn],
     pause: [Function: commandFn],
     perform: [Function: commandFn],
     useCss: [Function: commandFn],
     useRecursion: [Function: commandFn],
     useXpath: [Function: commandFn],
     page: 
      { 'dashboard.page': [Function],
        'login.page': [Function],
        'newproduct.page': [Function],
        'previewBook.page': [Function],
        'productDetails.page': [Function],
        'products.page': [Function],
        'publish.page': [Function] },
     expect: { element: [Function] },
     assert: 
      { AssertionError: [Function],
        fail: [Function],
        ok: [Function],
        equal: [Function],
        notEqual: [Function],
        deepEqual: [Function],
        deepStrictEqual: [Function],
        notDeepEqual: [Function],
        notDeepStrictEqual: [Function],
        strictEqual: [Function],
        notStrictEqual: [Function],
        throws: [Function],
        doesNotThrow: [Function],
        ifError: [Function],
        attributeContains: [Function: commandFn],
        attributeEquals: [Function: commandFn],
        containsText: [Function: commandFn],
        cssClassNotPresent: [Function: commandFn],
        cssClassPresent: [Function: commandFn],
        cssProperty: [Function: commandFn],
        elementNotPresent: [Function: commandFn],
        elementPresent: [Function: commandFn],
        hidden: [Function: commandFn],
        title: [Function: commandFn],
        urlContains: [Function: commandFn],
        urlEquals: [Function: commandFn],
        value: [Function: commandFn],
        valueContains: [Function: commandFn],
        visible: [Function: commandFn] },
     verify: 
      { AssertionError: [Function],
        fail: [Function],
        ok: [Function],
        equal: [Function],
        notEqual: [Function],
        deepEqual: [Function],
        deepStrictEqual: [Function],
        notDeepEqual: [Function],
        notDeepStrictEqual: [Function],
        strictEqual: [Function],
        notStrictEqual: [Function],
        throws: [Function],
        doesNotThrow: [Function],
        ifError: [Function],
        attributeContains: [Function: commandFn],
        attributeEquals: [Function: commandFn],
        containsText: [Function: commandFn],
        cssClassNotPresent: [Function: commandFn],
        cssClassPresent: [Function: commandFn],
        cssProperty: [Function: commandFn],
        elementNotPresent: [Function: commandFn],
        elementPresent: [Function: commandFn],
        hidden: [Function: commandFn],
        title: [Function: commandFn],
        urlContains: [Function: commandFn],
        urlEquals: [Function: commandFn],
        value: [Function: commandFn],
        valueContains: [Function: commandFn],
        visible: [Function: commandFn] },
     currentTest: 
      { name: 'Verify flat reading',
        module: 'builder-smoke-test-suite' } },
  commandLoader: [Function],
  props: {},
  elements: 
   { filterByCyYear: 
      Element {
        parent: [Circular],
        name: 'filterByCyYear',
        selector: '[class~=builder-sidebar-panel] [data-ng-class*=year]',
        locateStrategy: 'css selector' },
     filterByProgram: 
      Element {
        parent: [Circular],
        name: 'filterByProgram',
        selector: '[class~=builder-sidebar-panel] [data-ng-class*=program]',
        locateStrategy: 'css selector' },
     filterByType: 
      Element {
        parent: [Circular],
        name: 'filterByType',
        selector: '[class~=builder-sidebar-panel] [data-ng-class*=type]',
        locateStrategy: 'css selector' },
     filterByStatus: 
      Element {
        parent: [Circular],
        name: 'filterByStatus',
        selector: '[class~=builder-sidebar-panel] [data-ng-class*=status]',
        locateStrategy: 'css selector' },
     totalProductCount: 
      Element {
        parent: [Circular],
        name: 'totalProductCount',
        selector: '[class~=builder-sidebar-panel] h3[class~=ng-binding]',
        locateStrategy: 'css selector' },
     filterLabel: 
      Element {
        parent: [Circular],
        name: 'filterLabel',
        selector: '[class~=filter-widget] [class~=facet-label]',
        locateStrategy: 'css selector' },
     filterLabelCloseIcon: 
      Element {
        parent: [Circular],
        name: 'filterLabelCloseIcon',
        selector: '[class~=filter-widget] [class~=fa-close]',
        locateStrategy: 'css selector' },
     resetButton: 
      Element {
        parent: [Circular],
        name: 'resetButton',
        selector: '[class~=filter-widget] [class~=pull-right][class~=btn]',
        locateStrategy: 'css selector' },
     bookLink: 
      Element {
        parent: [Circular],
        name: 'bookLink',
        selector: '[class~=list-group-item] [data-ng-if*=title]',
        locateStrategy: 'css selector' },
     bookTypeLabel: 
      Element {
        parent: [Circular],
        name: 'bookTypeLabel',
        selector: '[class~=info] p',
        locateStrategy: 'css selector' },
     workLabel: 
      Element {
        parent: [Circular],
        name: 'workLabel',
        selector: '[class~=list-group-item] [class~=pull-right] [class~=label][class~=ng-binding]',
        locateStrategy: 'css selector' },
     moreOptions: 
      Element {
        parent: [Circular],
        name: 'moreOptions',
        selector: '[class~=list-group-item] [class~=pull-right] [class~=dropdown]',
        locateStrategy: 'css selector' },
     moreOptionsFinalize: 
      Element {
        parent: [Circular],
        name: 'moreOptionsFinalize',
        selector: '[class~=list-group-item] [class~=dropdown-menu] [data-ng-click*=finalize]',
        locateStrategy: 'css selector' },
     moreOptionsReopen: 
      Element {
        parent: [Circular],
        name: 'moreOptionsReopen',
        selector: '[class~=list-group-item] [class~=dropdown-menu] [data-ng-click*=reopen]',
        locateStrategy: 'css selector' },
     moreOptionsClone: 
      Element {
        parent: [Circular],
        name: 'moreOptionsClone',
        selector: '[class~=list-group-item] [class~=dropdown-menu] [data-ng-click*=clone]',
        locateStrategy: 'css selector' },
     moreOptionsDelete: 
      Element {
        parent: [Circular],
        name: 'moreOptionsDelete',
        selector: '[class~=list-group-item] [class~=dropdown-menu] [data-ng-click*=delete]',
        locateStrategy: 'css selector' },
     bookVersion: 
      Element {
        parent: [Circular],
        name: 'bookVersion',
        selector: '[class~=version-info-label] [data-ng-if*=version]',
        locateStrategy: 'css selector' },
     bookEntry: 
      Element {
        parent: [Circular],
        name: 'bookEntry',
        selector: '[class~=builder-course-list] [class~=list-group-item]',
        locateStrategy: 'css selector' },
     okButtonConfirmDialog: 
      Element {
        parent: [Circular],
        name: 'okButtonConfirmDialog',
        selector: '[role=dialog] [data-ng-click*=submit]',
        locateStrategy: 'css selector' } },
  section: {},
  previewBookOnServer: [Function],
  getBookVersion: [Function],
  getFilterLabelText: [Function],
  filterByYear: [Function],
  filterByProgram: [Function],
  filterByProductType: [Function],
  filterByStatus: [Function],
  waitForResetButtonToAppear: [Function],
  clickResetButton: [Function],
  getBookLabel: [Function],
  getWorkLabel: [Function],
  waitForBookLinkToAppear: [Function],
  waitForFilterByYearLinkToAppear: [Function],
  waitForFilterByProgramLinkToAppear: [Function],
  waitForFilterByTypeLinkToAppear: [Function],
  waitForFilterByStatusLinkToAppear: [Function],
  getTotalProductCount: [Function],
  clickBookLink: [Function],
  clickMoreOptions: [Function],
  removeLabelByFilterType: [Function],
  isBookPresent: [Function],
  clickMoreOptionsDelete: [Function],
  clickDeleteConfirmationOk: [Function],
  click: [Function],
  clearValue: [Function],
  getAttribute: [Function],
  getCssProperty: [Function],
  getElementSize: [Function],
  getLocation: [Function],
  getLocationInView: [Function],
  getTagName: [Function],
  getText: [Function],
  getValue: [Function],
  isVisible: [Function],
  moveToElement: [Function],
  setValue: [Function],
  submitForm: [Function],
  sendKeys: [Function],
  waitForElementNotPresent: [Function],
  waitForElementNotVisible: [Function],
  waitForElementPresent: [Function],
  waitForElementVisible: [Function],
  expect: { element: [Function], section: [Function] },
  assert: 
   { AssertionError: [Function],
     fail: [Function],
     ok: [Function],
     equal: [Function],
     notEqual: [Function],
     deepEqual: [Function],
     deepStrictEqual: [Function],
     notDeepEqual: [Function],
     notDeepStrictEqual: [Function],
     strictEqual: [Function],
     notStrictEqual: [Function],
     throws: [Function],
     doesNotThrow: [Function],
     ifError: [Function],
     attributeContains: [Function],
     attributeEquals: [Function],
     containsText: [Function],
     cssClassNotPresent: [Function],
     cssClassPresent: [Function],
     cssProperty: [Function],
     elementNotPresent: [Function],
     elementPresent: [Function],
     hidden: [Function],
     title: [Function],
     urlContains: [Function],
     urlEquals: [Function],
     value: [Function],
     valueContains: [Function],
     visible: [Function] },
  verify: 
   { AssertionError: [Function],
     fail: [Function],
     ok: [Function],
     equal: [Function],
     notEqual: [Function],
     deepEqual: [Function],
     deepStrictEqual: [Function],
     notDeepEqual: [Function],
     notDeepStrictEqual: [Function],
     strictEqual: [Function],
     notStrictEqual: [Function],
     throws: [Function],
     doesNotThrow: [Function],
     ifError: [Function],
     attributeContains: [Function],
     attributeEquals: [Function],
     containsText: [Function],
     cssClassNotPresent: [Function],
     cssClassPresent: [Function],
     cssProperty: [Function],
     elementNotPresent: [Function],
     elementPresent: [Function],
     hidden: [Function],
     title: [Function],
     urlContains: [Function],
     urlEquals: [Function],
     value: [Function],
     valueContains: [Function],
     visible: [Function] } }
Section {
  parent: 
   { commandLoader: [Function],
     api: 
      { capabilities: {},
        globals: [Object],
        sessionId: null,
        options: [Object],
        launchUrl: null,
        launch_url: null,
        screenshotsPath: 'screenshots',
        Keys: [Object],
        session: [Function: commandFn],
        sessions: [Function: commandFn],
        timeouts: [Function: commandFn],
        timeoutsAsyncScript: [Function: commandFn],
        timeoutsImplicitWait: [Function: commandFn],
        element: [Function: commandFn],
        elementIdElement: [Function: commandFn],
        elements: [Function: commandFn],
        elementIdElements: [Function: commandFn],
        elementActive: [Function: commandFn],
        elementIdAttribute: [Function: commandFn],
        elementIdClick: [Function: commandFn],
        elementIdCssProperty: [Function: commandFn],
        elementIdDisplayed: [Function: commandFn],
        elementIdLocationInView: [Function: commandFn],
        elementIdLocation: [Function: commandFn],
        elementIdName: [Function: commandFn],
        elementIdClear: [Function: commandFn],
        elementIdSelected: [Function: commandFn],
        elementIdEnabled: [Function: commandFn],
        elementIdEquals: [Function: commandFn],
        elementIdSize: [Function: commandFn],
        elementIdText: [Function: commandFn],
        elementIdValue: [Function: commandFn],
        submit: [Function: commandFn],
        source: [Function: commandFn],
        contexts: [Function: commandFn],
        currentContext: [Function: commandFn],
        setContext: [Function: commandFn],
        getOrientation: [Function: commandFn],
        setOrientation: [Function: commandFn],
        moveTo: [Function: commandFn],
        doubleClick: [Function: commandFn],
        mouseButtonClick: [Function: commandFn],
        mouseButtonDown: [Function: commandFn],
        mouseButtonUp: [Function: commandFn],
        execute: [Function: commandFn],
        executeAsync: [Function: commandFn],
        execute_async: [Function: commandFn],
        frame: [Function: commandFn],
        frameParent: [Function: commandFn],
        window: [Function: commandFn],
        windowHandle: [Function: commandFn],
        windowMaximize: [Function: commandFn],
        window_handle: [Function: commandFn],
        windowHandles: [Function: commandFn],
        window_handles: [Function: commandFn],
        windowSize: [Function: commandFn],
        windowPosition: [Function: commandFn],
        refresh: [Function: commandFn],
        back: [Function: commandFn],
        forward: [Function: commandFn],
        screenshot: [Function: commandFn],
        url: [Function: commandFn],
        status: [Function: commandFn],
        title: [Function: commandFn],
        keys: [Function: commandFn],
        cookie: [Function: commandFn],
        acceptAlert: [Function: commandFn],
        accept_alert: [Function: commandFn],
        dismissAlert: [Function: commandFn],
        setAlertText: [Function: commandFn],
        getAlertText: [Function: commandFn],
        dismiss_alert: [Function: commandFn],
        sessionLog: [Function: commandFn],
        sessionLogTypes: [Function: commandFn],
        click: [Function: commandFn],
        clearValue: [Function: commandFn],
        getAttribute: [Function: commandFn],
        getCssProperty: [Function: commandFn],
        getElementSize: [Function: commandFn],
        getLocation: [Function: commandFn],
        getLocationInView: [Function: commandFn],
        getTagName: [Function: commandFn],
        getText: [Function: commandFn],
        getValue: [Function: commandFn],
        isVisible: [Function: commandFn],
        moveToElement: [Function: commandFn],
        setValue: [Function: commandFn],
        submitForm: [Function: commandFn],
        sendKeys: [Function: commandFn],
        switchWindow: [Function: commandFn],
        resizeWindow: [Function: commandFn],
        setWindowPosition: [Function: commandFn],
        maximizeWindow: [Function: commandFn],
        saveScreenshot: [Function: commandFn],
        getTitle: [Function: commandFn],
        closeWindow: [Function: commandFn],
        init: [Function: commandFn],
        urlHash: [Function: commandFn],
        getCookies: [Function: commandFn],
        getCookie: [Function: commandFn],
        setCookie: [Function: commandFn],
        deleteCookie: [Function: commandFn],
        deleteCookies: [Function: commandFn],
        injectScript: [Function: commandFn],
        getLogTypes: [Function: commandFn],
        getLog: [Function: commandFn],
        isLogAvailable: [Function: commandFn],
        waitForElementNotPresent: [Function: commandFn],
        waitForElementNotVisible: [Function: commandFn],
        waitForElementPresent: [Function: commandFn],
        waitForElementVisible: [Function: commandFn],
        end: [Function: commandFn],
        pause: [Function: commandFn],
        perform: [Function: commandFn],
        useCss: [Function: commandFn],
        useRecursion: [Function: commandFn],
        useXpath: [Function: commandFn],
        page: [Object],
        expect: [Object],
        assert: [Object],
        verify: [Object],
        currentTest: [Object] },
     client: 
      Nightwatch {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: 0,
        locateStrategy: 'css selector',
        api: [Object],
        sessionId: null,
        context: null,
        terminated: false,
        options: [Object],
        desiredCapabilities: [Object],
        errors: [],
        results: [Object],
        queue: [Object] },
     name: 'products.page',
     url: null,
     props: {},
     elements: {},
     section: { productTemplates: [Object], productFilters: [Circular] },
     click: [Function],
     clearValue: [Function],
     getAttribute: [Function],
     getCssProperty: [Function],
     getElementSize: [Function],
     getLocation: [Function],
     getLocationInView: [Function],
     getTagName: [Function],
     getText: [Function],
     getValue: [Function],
     isVisible: [Function],
     moveToElement: [Function],
     setValue: [Function],
     submitForm: [Function],
     sendKeys: [Function],
     waitForElementNotPresent: [Function],
     waitForElementNotVisible: [Function],
     waitForElementPresent: [Function],
     waitForElementVisible: [Function],
     expect: { element: [Function], section: [Function] },
     assert: 
      { AssertionError: [Function],
        fail: [Function],
        ok: [Function],
        equal: [Function],
        notEqual: [Function],
        deepEqual: [Function],
        deepStrictEqual: [Function],
        notDeepEqual: [Function],
        notDeepStrictEqual: [Function],
        strictEqual: [Function],
        notStrictEqual: [Function],
        throws: [Function],
        doesNotThrow: [Function],
        ifError: [Function],
        attributeContains: [Function],
        attributeEquals: [Function],
        containsText: [Function],
        cssClassNotPresent: [Function],
        cssClassPresent: [Function],
        cssProperty: [Function],
        elementNotPresent: [Function],
        elementPresent: [Function],
        hidden: [Function],
        title: [Function],
        urlContains: [Function],
        urlEquals: [Function],
        value: [Function],
        valueContains: [Function],
        visible: [Function] },
     verify: 
      { AssertionError: [Function],
        fail: [Function],
        ok: [Function],
        equal: [Function],
        notEqual: [Function],
        deepEqual: [Function],
        deepStrictEqual: [Function],
        notDeepEqual: [Function],
        notDeepStrictEqual: [Function],
        strictEqual: [Function],
        notStrictEqual: [Function],
        throws: [Function],
        doesNotThrow: [Function],
        ifError: [Function],
        attributeContains: [Function],
        attributeEquals: [Function],
        containsText: [Function],
        cssClassNotPresent: [Function],
        cssClassPresent: [Function],
        cssProperty: [Function],
        elementNotPresent: [Function],
        elementPresent: [Function],
        hidden: [Function],
        title: [Function],
        urlContains: [Function],
        urlEquals: [Function],
        value: [Function],
        valueContains: [Function],
        visible: [Function] } },
  client: 
   Nightwatch {
     domain: null,
     _events: { 'selenium:session_create': [Object] },
     _eventsCount: 1,
     _maxListeners: 0,
     locateStrategy: 'css selector',
     api: 
      { capabilities: {},
        globals: [Object],
        sessionId: null,
        options: [Object],
        launchUrl: null,
        launch_url: null,
        screenshotsPath: 'screenshots',
        Keys: [Object],
        session: [Function: commandFn],
        sessions: [Function: commandFn],
        timeouts: [Function: commandFn],
        timeoutsAsyncScript: [Function: commandFn],
        timeoutsImplicitWait: [Function: commandFn],
        element: [Function: commandFn],
        elementIdElement: [Function: commandFn],
        elements: [Function: commandFn],
        elementIdElements: [Function: commandFn],
        elementActive: [Function: commandFn],
        elementIdAttribute: [Function: commandFn],
        elementIdClick: [Function: commandFn],
        elementIdCssProperty: [Function: commandFn],
        elementIdDisplayed: [Function: commandFn],
        elementIdLocationInView: [Function: commandFn],
        elementIdLocation: [Function: commandFn],
        elementIdName: [Function: commandFn],
        elementIdClear: [Function: commandFn],
        elementIdSelected: [Function: commandFn],
        elementIdEnabled: [Function: commandFn],
        elementIdEquals: [Function: commandFn],
        elementIdSize: [Function: commandFn],
        elementIdText: [Function: commandFn],
        elementIdValue: [Function: commandFn],
        submit: [Function: commandFn],
        source: [Function: commandFn],
        contexts: [Function: commandFn],
        currentContext: [Function: commandFn],
        setContext: [Function: commandFn],
        getOrientation: [Function: commandFn],
        setOrientation: [Function: commandFn],
        moveTo: [Function: commandFn],
        doubleClick: [Function: commandFn],
        mouseButtonClick: [Function: commandFn],
        mouseButtonDown: [Function: commandFn],
        mouseButtonUp: [Function: commandFn],
        execute: [Function: commandFn],
        executeAsync: [Function: commandFn],
        execute_async: [Function: commandFn],
        frame: [Function: commandFn],
        frameParent: [Function: commandFn],
        window: [Function: commandFn],
        windowHandle: [Function: commandFn],
        windowMaximize: [Function: commandFn],
        window_handle: [Function: commandFn],
        windowHandles: [Function: commandFn],
        window_handles: [Function: commandFn],
        windowSize: [Function: commandFn],
        windowPosition: [Function: commandFn],
        refresh: [Function: commandFn],
        back: [Function: commandFn],
        forward: [Function: commandFn],
        screenshot: [Function: commandFn],
        url: [Function: commandFn],
        status: [Function: commandFn],
        title: [Function: commandFn],
        keys: [Function: commandFn],
        cookie: [Function: commandFn],
        acceptAlert: [Function: commandFn],
        accept_alert: [Function: commandFn],
        dismissAlert: [Function: commandFn],
        setAlertText: [Function: commandFn],
        getAlertText: [Function: commandFn],
        dismiss_alert: [Function: commandFn],
        sessionLog: [Function: commandFn],
        sessionLogTypes: [Function: commandFn],
        click: [Function: commandFn],
        clearValue: [Function: commandFn],
        getAttribute: [Function: commandFn],
        getCssProperty: [Function: commandFn],
        getElementSize: [Function: commandFn],
        getLocation: [Function: commandFn],
        getLocationInView: [Function: commandFn],
        getTagName: [Function: commandFn],
        getText: [Function: commandFn],
        getValue: [Function: commandFn],
        isVisible: [Function: commandFn],
        moveToElement: [Function: commandFn],
        setValue: [Function: commandFn],
        submitForm: [Function: commandFn],
        sendKeys: [Function: commandFn],
        switchWindow: [Function: commandFn],
        resizeWindow: [Function: commandFn],
        setWindowPosition: [Function: commandFn],
        maximizeWindow: [Function: commandFn],
        saveScreenshot: [Function: commandFn],
        getTitle: [Function: commandFn],
        closeWindow: [Function: commandFn],
        init: [Function: commandFn],
        urlHash: [Function: commandFn],
        getCookies: [Function: commandFn],
        getCookie: [Function: commandFn],
        setCookie: [Function: commandFn],
        deleteCookie: [Function: commandFn],
        deleteCookies: [Function: commandFn],
        injectScript: [Function: commandFn],
        getLogTypes: [Function: commandFn],
        getLog: [Function: commandFn],
        isLogAvailable: [Function: commandFn],
        waitForElementNotPresent: [Function: commandFn],
        waitForElementNotVisible: [Function: commandFn],
        waitForElementPresent: [Function: commandFn],
        waitForElementVisible: [Function: commandFn],
        end: [Function: commandFn],
        pause: [Function: commandFn],
        perform: [Function: commandFn],
        useCss: [Function: commandFn],
        useRecursion: [Function: commandFn],
        useXpath: [Function: commandFn],
        page: [Object],
        expect: [Object],
        assert: [Object],
        verify: [Object],
        currentTest: [Object] },
     sessionId: null,
     context: null,
     terminated: false,
     options: 
      { selenium_host: '127.0.0.1',
        selenium_port: 5554,
        end_session_on_fail: false,
        src_folders: [Object],
        screenshots: [Object],
        desiredCapabilities: [Object],
        cli_args: [Object],
        custom_commands_path: './test/e2e/custom_commands',
        custom_assertions_path: '',
        page_objects_path: './test/e2e/pages/',
        silent: true,
        output: false,
        test_runner: [Object],
        globals: [Object],
        modulesNo: 1,
        start_session: true },
     desiredCapabilities: 
      { browserName: 'chrome',
        javascriptEnabled: true,
        acceptSslCerts: true,
        platform: 'ANY',
        chromeOptions: [Object] },
     errors: [],
     results: { passed: 0, failed: 0, errors: 0, skipped: 0, tests: [] },
     queue: 
      { reset: [Function],
        empty: [Function],
        add: [Function],
        run: [Function: queueRunner],
        done: [Function],
        instance: [Function: instance],
        list: [Function: list] } },
  name: 'productFilters',
  selector: '#content [class~=row][class~=ng-scope]',
  locateStrategy: 'css selector',
  api: 
   { capabilities: {},
     globals: { test: [Object], test_settings: [Object] },
     sessionId: null,
     options: 
      { screenshots: true,
        screenshotsPath: 'screenshots',
        skip_testcases_on_fail: true,
        log_screenshot_data: true,
        desiredCapabilities: [Object] },
     launchUrl: null,
     launch_url: null,
     screenshotsPath: 'screenshots',
     Keys: 
      { NULL: '',
        CANCEL: '',
        HELP: '',
        BACK_SPACE: '',
        TAB: '',
        CLEAR: '',
        RETURN: '',
        ENTER: '',
        SHIFT: '',
        CONTROL: '',
        ALT: '',
        PAUSE: '',
        ESCAPE: '',
        SPACE: '',
        PAGEUP: '',
        PAGEDOWN: '',
        END: '',
        HOME: '',
        LEFT_ARROW: '',
        UP_ARROW: '',
        RIGHT_ARROW: '',
        DOWN_ARROW: '',
        ARROW_LEFT: '',
        ARROW_UP: '',
        ARROW_RIGHT: '',
        ARROW_DOWN: '',
        INSERT: '',
        DELETE: '',
        SEMICOLON: '',
        EQUALS: '',
        NUMPAD0: '',
        NUMPAD1: '',
        NUMPAD2: '',
        NUMPAD3: '',
        NUMPAD4: '',
        NUMPAD5: '',
        NUMPAD6: '',
        NUMPAD7: '',
        NUMPAD8: '',
        NUMPAD9: '',
        MULTIPLY: '',
        ADD: '',
        SEPARATOR: '',
        SUBTRACT: '',
        DECIMAL: '',
        DIVIDE: '',
        F1: '',
        F2: '',
        F3: '',
        F4: '',
        F5: '',
        F6: '',
        F7: '',
        F8: '',
        F9: '',
        F10: '',
        F11: '',
        F12: '',
        COMMAND: '',
        META: '' },
     session: [Function: commandFn],
     sessions: [Function: commandFn],
     timeouts: [Function: commandFn],
     timeoutsAsyncScript: [Function: commandFn],
     timeoutsImplicitWait: [Function: commandFn],
     element: [Function: commandFn],
     elementIdElement: [Function: commandFn],
     elements: [Function: commandFn],
     elementIdElements: [Function: commandFn],
     elementActive: [Function: commandFn],
     elementIdAttribute: [Function: commandFn],
     elementIdClick: [Function: commandFn],
     elementIdCssProperty: [Function: commandFn],
     elementIdDisplayed: [Function: commandFn],
     elementIdLocationInView: [Function: commandFn],
     elementIdLocation: [Function: commandFn],
     elementIdName: [Function: commandFn],
     elementIdClear: [Function: commandFn],
     elementIdSelected: [Function: commandFn],
     elementIdEnabled: [Function: commandFn],
     elementIdEquals: [Function: commandFn],
     elementIdSize: [Function: commandFn],
     elementIdText: [Function: commandFn],
     elementIdValue: [Function: commandFn],
     submit: [Function: commandFn],
     source: [Function: commandFn],
     contexts: [Function: commandFn],
     currentContext: [Function: commandFn],
     setContext: [Function: commandFn],
     getOrientation: [Function: commandFn],
     setOrientation: [Function: commandFn],
     moveTo: [Function: commandFn],
     doubleClick: [Function: commandFn],
     mouseButtonClick: [Function: commandFn],
     mouseButtonDown: [Function: commandFn],
     mouseButtonUp: [Function: commandFn],
     execute: [Function: commandFn],
     executeAsync: [Function: commandFn],
     execute_async: [Function: commandFn],
     frame: [Function: commandFn],
     frameParent: [Function: commandFn],
     window: [Function: commandFn],
     windowHandle: [Function: commandFn],
     windowMaximize: [Function: commandFn],
     window_handle: [Function: commandFn],
     windowHandles: [Function: commandFn],
     window_handles: [Function: commandFn],
     windowSize: [Function: commandFn],
     windowPosition: [Function: commandFn],
     refresh: [Function: commandFn],
     back: [Function: commandFn],
     forward: [Function: commandFn],
     screenshot: [Function: commandFn],
     url: [Function: commandFn],
     status: [Function: commandFn],
     title: [Function: commandFn],
     keys: [Function: commandFn],
     cookie: [Function: commandFn],
     acceptAlert: [Function: commandFn],
     accept_alert: [Function: commandFn],
     dismissAlert: [Function: commandFn],
     setAlertText: [Function: commandFn],
     getAlertText: [Function: commandFn],
     dismiss_alert: [Function: commandFn],
     sessionLog: [Function: commandFn],
     sessionLogTypes: [Function: commandFn],
     click: [Function: commandFn],
     clearValue: [Function: commandFn],
     getAttribute: [Function: commandFn],
     getCssProperty: [Function: commandFn],
     getElementSize: [Function: commandFn],
     getLocation: [Function: commandFn],
     getLocationInView: [Function: commandFn],
     getTagName: [Function: commandFn],
     getText: [Function: commandFn],
     getValue: [Function: commandFn],
     isVisible: [Function: commandFn],
     moveToElement: [Function: commandFn],
     setValue: [Function: commandFn],
     submitForm: [Function: commandFn],
     sendKeys: [Function: commandFn],
     switchWindow: [Function: commandFn],
     resizeWindow: [Function: commandFn],
     setWindowPosition: [Function: commandFn],
     maximizeWindow: [Function: commandFn],
     saveScreenshot: [Function: commandFn],
     getTitle: [Function: commandFn],
     closeWindow: [Function: commandFn],
     init: [Function: commandFn],
     urlHash: [Function: commandFn],
     getCookies: [Function: commandFn],
     getCookie: [Function: commandFn],
     setCookie: [Function: commandFn],
     deleteCookie: [Function: commandFn],
     deleteCookies: [Function: commandFn],
     injectScript: [Function: commandFn],
     getLogTypes: [Function: commandFn],
     getLog: [Function: commandFn],
     isLogAvailable: [Function: commandFn],
     waitForElementNotPresent: [Function: commandFn],
     waitForElementNotVisible: [Function: commandFn],
     waitForElementPresent: [Function: commandFn],
     waitForElementVisible: [Function: commandFn],
     end: [Function: commandFn],
     pause: [Function: commandFn],
     perform: [Function: commandFn],
     useCss: [Function: commandFn],
     useRecursion: [Function: commandFn],
     useXpath: [Function: commandFn],
     page: 
      { 'dashboard.page': [Function],
        'login.page': [Function],
        'newproduct.page': [Function],
        'previewBook.page': [Function],
        'productDetails.page': [Function],
        'products.page': [Function],
        'publish.page': [Function] },
     expect: { element: [Function] },
     assert: 
      { AssertionError: [Function],
        fail: [Function],
        ok: [Function],
        equal: [Function],
        notEqual: [Function],
        deepEqual: [Function],
        deepStrictEqual: [Function],
        notDeepEqual: [Function],
        notDeepStrictEqual: [Function],
        strictEqual: [Function],
        notStrictEqual: [Function],
        throws: [Function],
        doesNotThrow: [Function],
        ifError: [Function],
        attributeContains: [Function: commandFn],
        attributeEquals: [Function: commandFn],
        containsText: [Function: commandFn],
        cssClassNotPresent: [Function: commandFn],
        cssClassPresent: [Function: commandFn],
        cssProperty: [Function: commandFn],
        elementNotPresent: [Function: commandFn],
        elementPresent: [Function: commandFn],
        hidden: [Function: commandFn],
        title: [Function: commandFn],
        urlContains: [Function: commandFn],
        urlEquals: [Function: commandFn],
        value: [Function: commandFn],
        valueContains: [Function: commandFn],
        visible: [Function: commandFn] },
     verify: 
      { AssertionError: [Function],
        fail: [Function],
        ok: [Function],
        equal: [Function],
        notEqual: [Function],
        deepEqual: [Function],
        deepStrictEqual: [Function],
        notDeepEqual: [Function],
        notDeepStrictEqual: [Function],
        strictEqual: [Function],
        notStrictEqual: [Function],
        throws: [Function],
        doesNotThrow: [Function],
        ifError: [Function],
        attributeContains: [Function: commandFn],
        attributeEquals: [Function: commandFn],
        containsText: [Function: commandFn],
        cssClassNotPresent: [Function: commandFn],
        cssClassPresent: [Function: commandFn],
        cssProperty: [Function: commandFn],
        elementNotPresent: [Function: commandFn],
        elementPresent: [Function: commandFn],
        hidden: [Function: commandFn],
        title: [Function: commandFn],
        urlContains: [Function: commandFn],
        urlEquals: [Function: commandFn],
        value: [Function: commandFn],
        valueContains: [Function: commandFn],
        visible: [Function: commandFn] },
     currentTest: 
      { name: 'Verify flat reading',
        module: 'builder-smoke-test-suite' } },
  commandLoader: [Function],
  props: {},
  elements: 
   { filterByCyYear: 
      Element {
        parent: [Circular],
        name: 'filterByCyYear',
        selector: '[class~=builder-sidebar-panel] [data-ng-class*=year]',
        locateStrategy: 'css selector' },
     filterByProgram: 
      Element {
        parent: [Circular],
        name: 'filterByProgram',
        selector: '[class~=builder-sidebar-panel] [data-ng-class*=program]',
        locateStrategy: 'css selector' },
     filterByType: 
      Element {
        parent: [Circular],
        name: 'filterByType',
        selector: '[class~=builder-sidebar-panel] [data-ng-class*=type]',
        locateStrategy: 'css selector' },
     filterByStatus: 
      Element {
        parent: [Circular],
        name: 'filterByStatus',
        selector: '[class~=builder-sidebar-panel] [data-ng-class*=status]',
        locateStrategy: 'css selector' },
     totalProductCount: 
      Element {
        parent: [Circular],
        name: 'totalProductCount',
        selector: '[class~=builder-sidebar-panel] h3[class~=ng-binding]',
        locateStrategy: 'css selector' },
     filterLabel: 
      Element {
        parent: [Circular],
        name: 'filterLabel',
        selector: '[class~=filter-widget] [class~=facet-label]',
        locateStrategy: 'css selector' },
     filterLabelCloseIcon: 
      Element {
        parent: [Circular],
        name: 'filterLabelCloseIcon',
        selector: '[class~=filter-widget] [class~=fa-close]',
        locateStrategy: 'css selector' },
     resetButton: 
      Element {
        parent: [Circular],
        name: 'resetButton',
        selector: '[class~=filter-widget] [class~=pull-right][class~=btn]',
        locateStrategy: 'css selector' },
     bookLink: 
      Element {
        parent: [Circular],
        name: 'bookLink',
        selector: '[class~=list-group-item] [data-ng-if*=title]',
        locateStrategy: 'css selector' },
     bookTypeLabel: 
      Element {
        parent: [Circular],
        name: 'bookTypeLabel',
        selector: '[class~=info] p',
        locateStrategy: 'css selector' },
     workLabel: 
      Element {
        parent: [Circular],
        name: 'workLabel',
        selector: '[class~=list-group-item] [class~=pull-right] [class~=label][class~=ng-binding]',
        locateStrategy: 'css selector' },
     moreOptions: 
      Element {
        parent: [Circular],
        name: 'moreOptions',
        selector: '[class~=list-group-item] [class~=pull-right] [class~=dropdown]',
        locateStrategy: 'css selector' },
     moreOptionsFinalize: 
      Element {
        parent: [Circular],
        name: 'moreOptionsFinalize',
        selector: '[class~=list-group-item] [class~=dropdown-menu] [data-ng-click*=finalize]',
        locateStrategy: 'css selector' },
     moreOptionsReopen: 
      Element {
        parent: [Circular],
        name: 'moreOptionsReopen',
        selector: '[class~=list-group-item] [class~=dropdown-menu] [data-ng-click*=reopen]',
        locateStrategy: 'css selector' },
     moreOptionsClone: 
      Element {
        parent: [Circular],
        name: 'moreOptionsClone',
        selector: '[class~=list-group-item] [class~=dropdown-menu] [data-ng-click*=clone]',
        locateStrategy: 'css selector' },
     moreOptionsDelete: 
      Element {
        parent: [Circular],
        name: 'moreOptionsDelete',
        selector: '[class~=list-group-item] [class~=dropdown-menu] [data-ng-click*=delete]',
        locateStrategy: 'css selector' },
     bookVersion: 
      Element {
        parent: [Circular],
        name: 'bookVersion',
        selector: '[class~=version-info-label] [data-ng-if*=version]',
        locateStrategy: 'css selector' },
     bookEntry: 
      Element {
        parent: [Circular],
        name: 'bookEntry',
        selector: '[class~=builder-course-list] [class~=list-group-item]',
        locateStrategy: 'css selector' },
     okButtonConfirmDialog: 
      Element {
        parent: [Circular],
        name: 'okButtonConfirmDialog',
        selector: '[role=dialog] [data-ng-click*=submit]',
        locateStrategy: 'css selector' } },
  section: {},
  previewBookOnServer: [Function],
  getBookVersion: [Function],
  getFilterLabelText: [Function],
  filterByYear: [Function],
  filterByProgram: [Function],
  filterByProductType: [Function],
  filterByStatus: [Function],
  waitForResetButtonToAppear: [Function],
  clickResetButton: [Function],
  getBookLabel: [Function],
  getWorkLabel: [Function],
  waitForBookLinkToAppear: [Function],
  waitForFilterByYearLinkToAppear: [Function],
  waitForFilterByProgramLinkToAppear: [Function],
  waitForFilterByTypeLinkToAppear: [Function],
  waitForFilterByStatusLinkToAppear: [Function],
  getTotalProductCount: [Function],
  clickBookLink: [Function],
  clickMoreOptions: [Function],
  removeLabelByFilterType: [Function],
  isBookPresent: [Function],
  clickMoreOptionsDelete: [Function],
  clickDeleteConfirmationOk: [Function],
  click: [Function],
  clearValue: [Function],
  getAttribute: [Function],
  getCssProperty: [Function],
  getElementSize: [Function],
  getLocation: [Function],
  getLocationInView: [Function],
  getTagName: [Function],
  getText: [Function],
  getValue: [Function],
  isVisible: [Function],
  moveToElement: [Function],
  setValue: [Function],
  submitForm: [Function],
  sendKeys: [Function],
  waitForElementNotPresent: [Function],
  waitForElementNotVisible: [Function],
  waitForElementPresent: [Function],
  waitForElementVisible: [Function],
  expect: { element: [Function], section: [Function] },
  assert: 
   { AssertionError: [Function],
     fail: [Function],
     ok: [Function],
     equal: [Function],
     notEqual: [Function],
     deepEqual: [Function],
     deepStrictEqual: [Function],
     notDeepEqual: [Function],
     notDeepStrictEqual: [Function],
     strictEqual: [Function],
     notStrictEqual: [Function],
     throws: [Function],
     doesNotThrow: [Function],
     ifError: [Function],
     attributeContains: [Function],
     attributeEquals: [Function],
     containsText: [Function],
     cssClassNotPresent: [Function],
     cssClassPresent: [Function],
     cssProperty: [Function],
     elementNotPresent: [Function],
     elementPresent: [Function],
     hidden: [Function],
     title: [Function],
     urlContains: [Function],
     urlEquals: [Function],
     value: [Function],
     valueContains: [Function],
     visible: [Function] },
  verify: 
   { AssertionError: [Function],
     fail: [Function],
     ok: [Function],
     equal: [Function],
     notEqual: [Function],
     deepEqual: [Function],
     deepStrictEqual: [Function],
     notDeepEqual: [Function],
     notDeepStrictEqual: [Function],
     strictEqual: [Function],
     notStrictEqual: [Function],
     throws: [Function],
     doesNotThrow: [Function],
     ifError: [Function],
     attributeContains: [Function],
     attributeEquals: [Function],
     containsText: [Function],
     cssClassNotPresent: [Function],
     cssClassPresent: [Function],
     cssProperty: [Function],
     elementNotPresent: [Function],
     elementPresent: [Function],
     hidden: [Function],
     title: [Function],
     urlContains: [Function],
     urlEquals: [Function],
     value: [Function],
     valueContains: [Function],
     visible: [Function] } }
http://builder.comprodls.com/#/program-programming/ebooks
[90m05:05:57.429Z[39m [31mERROR[39m test-web: [36mElement '@bookLink' could not be located on the page.[39m
    1) Verify flat reading


  0 passing (2m)
  1 failing

  1) Builder Smoke Test Suite Verify flat reading:
     Timed out while waiting for element <Section[name=productFilters],Element[name=@bookLink]> to be present for 30000 milliseconds. - Expected "visible" but got: "not found"
    at Section.waitForElementVisible (F:\vhl-builder\node_modules\nightwatch\lib\page-object\command-wrapper.js:103:25)
    at Object.module.exports.waitForElementVisible (F:\vhl-builder\test\e2e\lib\browserAction.js:213:17)
    at Section.module.exports.commands.waitForBookLinkToAppear (F:\vhl-builder\test\e2e\pages\sections\productFilterSection.js:363:25)
    at Context.<anonymous> (F:\vhl-builder\test\e2e\specs\builderSmokeTest.spec.js:68:55)
    at Test.Runnable.run (F:\vhl-builder\node_modules\mocha-nightwatch\lib\overrides\runnable.js:99:13)
    at Runner.runTest (F:\vhl-builder\node_modules\mocha-nightwatch\lib\runner.js:402:10)
    at F:\vhl-builder\node_modules\mocha-nightwatch\lib\runner.js:509:12
    at next (F:\vhl-builder\node_modules\mocha-nightwatch\lib\runner.js:327:14)
    at F:\vhl-builder\node_modules\mocha-nightwatch\lib\runner.js:337:7
    at next (F:\vhl-builder\node_modules\mocha-nightwatch\lib\runner.js:270:14)
    at F:\vhl-builder\node_modules\mocha-nightwatch\lib\runner.js:300:7
    at done (F:\vhl-builder\node_modules\mocha-nightwatch\lib\overrides\runnable.js:69:5)
    at Context.<anonymous> (F:\vhl-builder\test\e2e\specs\builderSmokeTest.spec.js:31:9)
    at Hook.Runnable.run (F:\vhl-builder\node_modules\mocha-nightwatch\lib\overrides\runnable.js:99:13)
    at next (F:\vhl-builder\node_modules\mocha-nightwatch\lib\runner.js:282:10)
    at Immediate._onImmediate (F:\vhl-builder\node_modules\mocha-nightwatch\lib\runner.js:305:5)
  




[mochawesome] Report saved to reports\index.html


